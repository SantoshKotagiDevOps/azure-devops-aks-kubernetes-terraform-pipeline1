#Stage-1: Terraform Validate Stage
#Step-1: Publish Artifacts to Pipeline (Pipeline artifacts provide a way to share files between stages in a pipeline or between different pipelines. )
#Step-2: Install Latest Terraform (0.13.5) (Ideally not needed if we use default Agents)
#Step-3: Validate Terraform Manifests

trigger:
- main

pool:
  vmImage: ubuntu-latest
stages:
  - stage: TerraformValidate
    jobs:
      - job: terraformValidateJob
        continueOnError: false
        steps:
        - task: PublishPipelineArtifact@1
          displayName: Publish Artifacts
          inputs:
            targetPath: '$(Pipeline.DefaultWorkingDirectory)terraform-manifests'
            artifact: 'terraform-manifests-out'
            publishLocation: 'pipeline'
        - task: TerraformInstaller@0
          displayName: Terraform Install
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV1@0
          displayName: 
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
            backendServiceArm: 'Free Trial(e46f4dfd-46d5-4a09-bf2f-262dbf2adfb0)'
            backendAzureRmResourceGroupName: 'terraform-storage-rg'
            backendAzureRmStorageAccountName: 'tfstatefilesantosh'
            backendAzureRmContainerName: 'tfstatefiles'
            backendAzureRmKey: 'aks-base.tfstate'

